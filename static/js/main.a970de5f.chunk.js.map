{"version":3,"sources":["TodoBoard.jsx","App.js","reportWebVitals.js","index.js"],"names":["TodoBoard","todo","setTodo","idx","todos","setTodos","className","id","class","name","email","des","onClick","e","preventDefault","newTodos","splice","App","useState","settodo","handleChange","target","value","onSubmit","for","type","onChange","rows","cols","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAiCeA,MA/Bf,YAA6D,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAE5C,OACI,qBAAKC,UAAU,OAAf,SACI,sBAAKA,UAAU,aAAf,UACI,qBAAIC,GAAG,SAASC,MAAM,SAAtB,mBAAsCL,EAAM,KAC5C,mBAAGG,UAAU,eAAb,SAA6BL,EAAKQ,OAClC,mBAAGH,UAAU,eAAb,SAA6BL,EAAKS,QAClC,mBAAGJ,UAAU,eAAb,SAA6BL,EAAKU,MAClC,gCACI,wBAAQL,UAAU,UAAUM,QAAS,SAACC,GAClCA,EAAEC,iBACFZ,EAAQE,EAAMD,IACd,IAAMY,EAAQ,YAAOX,GACrBW,EAASC,OAAOb,EAAK,GACrBE,EAASU,IALb,kBAQA,wBAAQT,UAAU,UAAUM,QAAS,SAACC,GAClCA,EAAEC,iBACF,IAAMC,EAAQ,YAAOX,GACrBW,EAASC,OAAOb,EAAK,GACrBE,EAASU,IAJb,6BCoCLE,MApDf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOd,EAAP,KAAcC,EAAd,KAEA,EAAwBa,mBAAS,CAC/B,CACET,KAAM,GACNC,MAAO,GACPC,IAAK,MAJT,mBAAOV,EAAP,KAAakB,EAAb,KAQA,SAASC,EAAaP,GACpBM,EAAQ,2BAAKlB,GAAN,kBAAaY,EAAEQ,OAAOZ,KAAOI,EAAEQ,OAAOC,SAI/C,OACE,sBAAKhB,UAAU,MAAf,UACE,sBAAKA,UAAU,YAAf,UAEE,oBAAIE,MAAM,SAAV,uBAEA,uBAAMF,UAAU,eAAeiB,SAAU,SAACV,GAAQA,EAAEC,iBAAkBT,EAAS,GAAD,mBAAKD,GAAL,CAAYH,KAAQkB,EAAQ,CAAEV,KAAM,IAAKC,MAAO,IAAKC,IAAK,OAAxI,UACE,sBAAKL,UAAU,OAAf,UACE,uBAAOkB,IAAI,WAAX,kBACA,uBAAOC,KAAK,OAAOlB,GAAG,WAAWE,KAAK,OAAOa,MAAOrB,EAAKQ,KAAMiB,SAAUN,OAE3E,sBAAKd,UAAU,OAAf,UACE,uBAAOkB,IAAI,WAAX,mBACA,uBAAOC,KAAK,QAAQlB,GAAG,WAAWE,KAAK,QAAQa,MAAOrB,EAAKS,MAAOgB,SAAUN,OAE9E,sBAAKd,UAAU,OAAf,UACE,uBAAOkB,IAAI,WAAX,kBACA,0BAAUjB,GAAG,WAAWE,KAAK,MAAMkB,KAAK,IAAIC,KAAK,KAAKN,MAAOrB,EAAKU,IAAKe,SAAUN,OAInF,gCAAK,wBAAQd,UAAU,SAASmB,KAAK,SAAhC,mBAAL,aAKJ,qBAAKnB,UAAU,WAAf,SAEIF,EAAMyB,KAAI,SAAC5B,EAAME,GAAP,OAAe,cAAC,EAAD,CAAqBA,IAAKA,EAAKC,MAAOA,EAAOH,KAAMA,EAAMC,QAASiB,EAASd,SAAUA,GAArEF,YCpCpC2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a970de5f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction TodoBoard({ todo, setTodo, idx, todos, setTodos }) {\r\n\r\n    return (\r\n        <div className=\"App2\">\r\n            <div className=\"container2\">\r\n                <h1 id=\"header\" class=\"header\">Todo: {idx + 1}</h1>\r\n                <p className=\"new-task box\">{todo.name}</p>\r\n                <p className=\"new-task box\">{todo.email}</p>\r\n                <p className=\"new-task box\">{todo.des}</p>\r\n                <div>\r\n                    <button className=\"button2\" onClick={(e) => {\r\n                        e.preventDefault();\r\n                        setTodo(todos[idx]);\r\n                        const newTodos = [...todos];\r\n                        newTodos.splice(idx, 1);\r\n                        setTodos(newTodos);\r\n                    }}>Edit</button>\r\n\r\n                    <button className=\"button2\" onClick={(e) => {\r\n                        e.preventDefault();\r\n                        const newTodos = [...todos];\r\n                        newTodos.splice(idx, 1);\r\n                        setTodos(newTodos);\r\n                    }}>Delete</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoBoard;","import { useState } from 'react';\nimport './App.css';\nimport TodoBoard from './TodoBoard';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n\n  const [todo, settodo] = useState([\n    {\n      name: \"\",\n      email: \"\",\n      des: \"\",\n    }\n  ]);\n\n  function handleChange(e) {\n    settodo({ ...todo, [e.target.name]: e.target.value });\n  }\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n\n        <h1 class=\"header\">TO DO BOX</h1>\n\n        <form className=\"new-task box\" onSubmit={(e) => { e.preventDefault(); setTodos([...todos, todo]); settodo({ name: \" \", email: \" \", des: \" \" }) }}>\n          <div className=\"task\">\n            <label for=\"new-task\">Name</label>\n            <input type=\"text\" id=\"new-task\" name=\"name\" value={todo.name} onChange={handleChange} />\n          </div>\n          <div className=\"task\">\n            <label for=\"new-task\">Email</label>\n            <input type=\"email\" id=\"new-task\" name=\"email\" value={todo.email} onChange={handleChange} />\n          </div>\n          <div className=\"task\">\n            <label for=\"new-task\">Todo</label>\n            <textarea id=\"new-task\" name=\"des\" rows=\"3\" cols=\"40\" value={todo.des} onChange={handleChange}>\n            </textarea>\n          </div>\n\n          <div><button className=\"button\" type=\"submit\">Creat</button> </div>\n        </form>\n\n      </div>\n\n      <div className=\"property\">\n        {\n          todos.map((todo, idx) => <TodoBoard key={idx} idx={idx} todos={todos} todo={todo} setTodo={settodo} setTodos={setTodos} />)\n        }\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}